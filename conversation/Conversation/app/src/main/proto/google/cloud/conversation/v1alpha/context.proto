// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.conversation.v1alpha;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

option cc_enable_arenas = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/conversation/v1alpha;conversation";
option java_multiple_files = true;
option java_outer_classname = "ContextProto";
option java_package = "com.google.cloud.conversation.v1alpha";

// Represents the current conditions of a user query.
message Context {
  // *Required* The unique identifier of the context.
  // Format: `projects/<Project ID>/agents/<Agent ID>/sessions/<Session
  // ID>/contexts/<Context ID>`.
  string name = 1;

  // *Optional* The number of conversational query requests after which the
  // context expires. If set to `0` (the default) the context expires when an
  // intent is detected for a query. Contexts expire automatically after
  // 10 minutes even if there are no matching queries.
  // If a context is added to a `DetectIntent` query
  // (`QueryParameters.contexts`)
  // and the `lifespan_count` for the context is less than or equal to `1`,
  // the context can expire immediately if the `DetectIntent` query matches
  // an intent.
  int32 lifespan_count = 2;

  // *Optional* The collection of parameters associated with this context.
  google.protobuf.Struct parameters = 3;
}

// A request to list contexts that are active in the specified session.
message ListContextsRequest {
  // *Required* The name of the session that contains the active contexts.
  // Format: `projects/<Project ID>/agents/<Agent ID>/sessions/<Session ID>`.
  string parent = 1;
}

// The message returned from the ListContexts method.
message ListContextsResponse {
  // The list of contexts in the specified session.
  repeated Context contexts = 1;
}

// The request to retrieve the specified context.
message GetContextRequest {
  // *Required* The name of the context to retrieve.
  // Format: `projects/<Project ID>/agents/<Agent ID>/sessions/<Session
  // ID>/contexts/<Context ID>`.
  string name = 1;
}

// The request to create a new context in the specified session.
message CreateContextRequest {
  // *Required* The name of the session to create a new context in.
  // Format: `projects/<Project ID>/agents/<Agent ID>/sessions/<Session ID>`.
  string parent = 1;

  // *Required* The context to create.
  Context context = 2;
}

// The request to update the specified context.
message UpdateContextRequest {
  // *Required* The context to update.
  Context context = 1;
}

// The request to delete the specified context.
message DeleteContextRequest {
  // *Required* The name of the context to delete.
  // Format: "projects/<Project ID>/agents/<Agent ID>/sessions/<Session
  // ID>/contexts/<Context ID>".
  string name = 1;
}

// The request to create multiple contexts in the specified session.
message BatchCreateContextsRequest {
  // *Required* The name of the session to create the new contexts in.
  // Format: `projects/<Project ID>/agents/<Agent ID>/sessions/<Session ID>`.
  string parent = 1;

  // *Required* The collection of contexts to create.
  repeated Context contexts = 2;
}

// The message returned from the BatchCreateContexts method.
message BatchCreateContextsResponse {
  // The collection of created contexts.
  repeated Context contexts = 1;
}

// The request to delete all contexts in the specified session.
message DeleteAllContextsRequest {
  // *Required* The name of the session to delete all contexts from.
  // Format: `projects/<Project ID>/agents/<Agent ID>/sessions/<Session ID>`.
  string parent = 1;
}
